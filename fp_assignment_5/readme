README for Homework #5

Will Johansson and Joseph Pecoraro

3.) The S expression:
	(((lambda (x) (lambda (y) x)) y) foo)
				: foo bound to x, but:
	 ((lambda (x) (lambda (y) x)) y)
				: y applied to the anonymous
				: function, returning (lambda (y) y),
				: thus returning y
	  (lambda (x) (lambda (y) x))
				: anonymous function that returns
				: (lambda (y) x)
		      (lambda (y) x)
				: anonymous function that returns x

	So you can see from above, you'll notice foo gets ignored because
	later on, line:

		((lambda (x) (lambda (y) x)) y)

	is executed and returns the function (lambda (y) y), which
	returns only y.

	In other words, the beta-reduction has been performed, making
	the above entire S expression simply express as (lambda (x) y).

	This is similar to:

		func1(x) { return func2(y) { return y; } }

	reducing to:

		func(x) { return y; }
